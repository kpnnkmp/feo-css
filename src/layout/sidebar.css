/**
 * SIDEBAR LAYOUT
 * Responsive 2-column layout with one fixed-width column and one flexible column
 * Automatically switches from horizontal to vertical layout based on content constraints
 *
 * Custom Properties:
 * --layout-gap: Gap between child elements (default: 0)
 * --layout-threshold: Fixed width of the sidebar column (default: 0)
 * --layout-inline-size: Minimum size of the flexible column before wrapping (default: 60%)
 * --layout-items: Align items on cross axis (default: stretch)
 * --layout-justify: Justify content on main axis (default: start)
 *
 * Modifiers:
 * .--left - Makes the first child the flexible column, second child the sidebar
 * .--right - Makes the second child the flexible column, first child the sidebar
 *
 * Usage: Creates a responsive sidebar that gracefully collapses to vertical layout
 */
.sidebar {
  --layout-gap: 0;
  --layout-inline-size: 60%;
  --layout-items: stretch;
  --layout-justify: start;
  --layout-threshold: 0;

  display: flex;
  flex-wrap: wrap;
  gap: var(--layout-gap);
  align-items: var(--layout-items);
  justify-content: var(--layout-justify);

  & > * {
    flex-basis: var(--layout-threshold);
    flex-grow: 1;
    min-width: min(100%, var(--layout-threshold));
  }

  &.--left > :last-child,
  &.--right > :first-child {
    flex-basis: 0;
    flex-grow: 999;

    /* Wraps to vertical layout when flexible column becomes smaller than --layout-inline-size */
    min-inline-size: var(--layout-inline-size);
  }
}
