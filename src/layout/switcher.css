/**
 * SWITCHER LAYOUT
 * Multi-column layout that switches from horizontal to vertical when children become too narrow
 * Uses a clever flexbox technique to automatically wrap based on child element min-width
 *
 * Custom Properties:
 * --layout-gap: Gap between child elements (default: 0)
 * --layout-threshold: Minimum width of each child element before wrapping (default: 0)
 * --layout-direction: Flex direction (default: row)
 * --layout-items: Align items on cross axis (default: stretch)
 * --layout-justify: Justify content on main axis (default: start)
 *
 * Modifiers:
 * .--no-grow - Prevents children from growing, centers them instead
 * .counted - Works with .counted utility to calculate threshold based on child count
 *
 * Usage: Children will stack vertically when their calculated width falls below --layout-threshold
 */

.switcher {
  --layout-gap: 0;
  --layout-threshold: 0;
  --layout-direction: row;
  --layout-items: stretch;
  --layout-justify: start;

  display: flex;
  flex-direction: var(--layout-direction);
  flex-wrap: wrap;
  gap: var(--layout-gap);
  align-items: var(--layout-items);
  justify-content: var(--layout-justify);

  & > * {
    flex-grow: 1;
    flex-basis: calc((var(--layout-threshold) - 100%) * 999);
  }

  &.--no-grow {
    --layout-justify: center;

    & > * {
      flex-grow: 0;
    }
  }

  &.counted > * {
    flex-basis: calc((var(--count) * var(--layout-threshold) - 100%) * 999);
  }
}
